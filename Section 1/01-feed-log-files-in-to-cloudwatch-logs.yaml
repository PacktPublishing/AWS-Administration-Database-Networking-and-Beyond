AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  AmiId:
    Type: AWS::EC2::Image::Id
    Description: AMI ID to launch instances from
    Default: ami-0b33d91d
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC where load balancer and instance will launch
  SubnetIDs:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Public subnet where the instance will launch (pick at least 1)
  KeyPair:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Key to launch EC2 instance with
  AlertEmail:
    Type: String
    Description: Email Address which alert emails will be sent to
Resources:
  ExampleRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        -
          PolicyName: WriteToCloudWatchLogs
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogStreams
                Resource: "*"
  ExampleInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref ExampleRole
      Path: /
  ExampleEC2InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for example Instance
      SecurityGroupIngress:
        - IpProtocol: tcp
          CidrIp: "0.0.0.0/0"
          FromPort: 22
          ToPort: 22
      VpcId: !Ref VpcId
  ExampleEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      IamInstanceProfile: !Ref ExampleInstanceProfile
      InstanceType: t2.nano
      KeyName: !Ref KeyPair
      UserData:
        Fn::Base64:
          Fn::Sub: |
            #!/bin/bash -ex
            yum update -y
            yum install -y awslogs
            cat << EOF > /etc/awslogs/config/var-log-secure.conf
            [/var/log/secure]
            datetime_format = %b %d %H:%M:%S
            file = /var/log/secure
            buffer_duration = 5000
            log_stream_name = {instance_id}
            initial_position = start_of_file
            log_group_name = /var/log/secure
            EOF
            service awslogs start
            chkconfig awslogs on
      ImageId: !Ref AmiId
      SecurityGroupIds:
        - Fn::GetAtt: ExampleEC2InstanceSecurityGroup.GroupId
      SubnetId: !Select [ 0, Ref: SubnetIDs ]
  ExampleSNSTopic: 
    Type: AWS::SNS::Topic
    Properties: 
      Subscription: 
        - 
          Endpoint: !Ref AlertEmail
          Protocol: email
  ExampleLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /var/log/secure
      RetentionInDays: 7
  ExampleLogsMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties: 
      FilterPattern: '"Accepted publickey for ec2-user from"'
      LogGroupName: /var/log/secure
      MetricTransformations:
        - 
          MetricValue: "1"
          MetricNamespace: SSH/Logins
          MetricName: LoginCount
    DependsOn: ExampleLogGroup
  ExampleLoginAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: SSH Login Alarm
      AlarmActions:
      - Ref: ExampleSNSTopic
      MetricName: LoginCount
      Namespace: SSH/Logins
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      Threshold: 0
      ComparisonOperator: GreaterThanThreshold
Outputs:
  ExampleEC2InstancePublicIp:
    Value: !GetAtt [ ExampleEC2Instance, PublicIp ]
